/**
 * @fileoverview gRPC-Web generated client stub for communication
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: debrief_proto/website.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var debrief_proto_generic_pb = require('../debrief_proto/generic_pb.js')

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.communication = require('./website_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.SummaryClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.SummaryPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.WebsiteByUserQuery,
 *   !proto.communication.WebsiteSet>}
 */
const methodDescriptor_Summary_Get = new grpc.web.MethodDescriptor(
  '/communication.Summary/Get',
  grpc.web.MethodType.UNARY,
  proto.communication.WebsiteByUserQuery,
  proto.communication.WebsiteSet,
  /**
   * @param {!proto.communication.WebsiteByUserQuery} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.WebsiteSet.deserializeBinary
);


/**
 * @param {!proto.communication.WebsiteByUserQuery} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.WebsiteSet)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.WebsiteSet>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.SummaryClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Summary/Get',
      request,
      metadata || {},
      methodDescriptor_Summary_Get,
      callback);
};


/**
 * @param {!proto.communication.WebsiteByUserQuery} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.WebsiteSet>}
 *     Promise that resolves to the response
 */
proto.communication.SummaryPromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Summary/Get',
      request,
      metadata || {},
      methodDescriptor_Summary_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.FlagRequest,
 *   !proto.communication.NullResponse>}
 */
const methodDescriptor_Summary_ToggleFlag = new grpc.web.MethodDescriptor(
  '/communication.Summary/ToggleFlag',
  grpc.web.MethodType.UNARY,
  proto.communication.FlagRequest,
  debrief_proto_generic_pb.NullResponse,
  /**
   * @param {!proto.communication.FlagRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  debrief_proto_generic_pb.NullResponse.deserializeBinary
);


/**
 * @param {!proto.communication.FlagRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.NullResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.NullResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.SummaryClient.prototype.toggleFlag =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Summary/ToggleFlag',
      request,
      metadata || {},
      methodDescriptor_Summary_ToggleFlag,
      callback);
};


/**
 * @param {!proto.communication.FlagRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.NullResponse>}
 *     Promise that resolves to the response
 */
proto.communication.SummaryPromiseClient.prototype.toggleFlag =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Summary/ToggleFlag',
      request,
      metadata || {},
      methodDescriptor_Summary_ToggleFlag);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.GenerateClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.communication.GeneratePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.WebsiteEntity,
 *   !proto.communication.WebsiteEntity>}
 */
const methodDescriptor_Generate_Title = new grpc.web.MethodDescriptor(
  '/communication.Generate/Title',
  grpc.web.MethodType.UNARY,
  proto.communication.WebsiteEntity,
  proto.communication.WebsiteEntity,
  /**
   * @param {!proto.communication.WebsiteEntity} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.WebsiteEntity.deserializeBinary
);


/**
 * @param {!proto.communication.WebsiteEntity} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.WebsiteEntity)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.WebsiteEntity>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.GenerateClient.prototype.title =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Generate/Title',
      request,
      metadata || {},
      methodDescriptor_Generate_Title,
      callback);
};


/**
 * @param {!proto.communication.WebsiteEntity} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.WebsiteEntity>}
 *     Promise that resolves to the response
 */
proto.communication.GeneratePromiseClient.prototype.title =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Generate/Title',
      request,
      metadata || {},
      methodDescriptor_Generate_Title);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.communication.WebsiteEntity,
 *   !proto.communication.WebsiteEntity>}
 */
const methodDescriptor_Generate_Summarize = new grpc.web.MethodDescriptor(
  '/communication.Generate/Summarize',
  grpc.web.MethodType.UNARY,
  proto.communication.WebsiteEntity,
  proto.communication.WebsiteEntity,
  /**
   * @param {!proto.communication.WebsiteEntity} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.communication.WebsiteEntity.deserializeBinary
);


/**
 * @param {!proto.communication.WebsiteEntity} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.communication.WebsiteEntity)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.communication.WebsiteEntity>|undefined}
 *     The XHR Node Readable Stream
 */
proto.communication.GenerateClient.prototype.summarize =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/communication.Generate/Summarize',
      request,
      metadata || {},
      methodDescriptor_Generate_Summarize,
      callback);
};


/**
 * @param {!proto.communication.WebsiteEntity} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.communication.WebsiteEntity>}
 *     Promise that resolves to the response
 */
proto.communication.GeneratePromiseClient.prototype.summarize =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/communication.Generate/Summarize',
      request,
      metadata || {},
      methodDescriptor_Generate_Summarize);
};


module.exports = proto.communication;

